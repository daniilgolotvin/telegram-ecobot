require('dotenv').config();
const { Bot, GrammyError, HttpError, Keyboard, InlineKeyboard } = require('grammy');
const { hydrate } = require("@grammyjs/hydrate");

const bot = new Bot(process.env.BOT_API_KEY);
bot.use(hydrate());

const sessions = new Map();
const keyboardOptions = {
  remove_keyboard: true,
};



function getRandomReply() { 
  const replies = [
    'Keep calm and —Å–¥–∞–≤–∞–π –º—É—Å–æ—Ä!',
    '–ú—É—Å–æ—Ä –µ—Å—Ç—å, –Ω–æ –≤—ã –¥–µ—Ä–∂–∏—Ç–µ—Å—å!',
    '–ë–∞—Ç–∞—Ä–µ–π–∫—É –Ω–µ —Å–¥–∞–ª, –∫–æ—Å–∞—Ä—å –æ—Ç–¥–∞–ª !',
    '–•–≤–∞—Ç–∏—Ç –∏–≥—Ä–∞—Ç—å –≤ –±—É—Ç—ã–ª–æ—á–∫—É, —Å–¥–∞–π –µ–µ!',
  ];
  return replies[Math.floor(Math.random() * replies.length)];
}

const randomReply = getRandomReply();

const selectCityKeyboard = new Keyboard()
      .text('–í—ã–∫—Å–∞')
      .text('–ú—É—Ä–æ–º')
      .text('–ù–∞–≤–∞—à–∏–Ω–æ').row()
			.text('< –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back-to-main-menu')
      .placeholder('–í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥')
      .resized();

const VyksaKeyboard = new InlineKeyboard()
  .text('–ü–ª–∞—Å—Ç–∏–∫', 'button-plastic-vyksa')
  .text('–ë–∞—Ç–∞—Ä–µ–π–∫–∏', 'button-battery-vyksa')
  .text('–°—Ç–µ–∫–ª–æ', 'button-glass-vyksa').row()
	.text('< –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –≥–æ—Ä–æ–¥–∞!', 'backSitySelect')
	


const NavaShinoKeyboard = new InlineKeyboard()
  .text('–ü–ª–∞—Å—Ç–∏–∫', 'button-plastic-nava-shino')
  .text('–ë–∞—Ç–∞—Ä–µ–π–∫–∏', 'button-battery-nava-shino')
  .text('–°—Ç–µ–∫–ª–æ', 'button-glass-nava-shino');

const MyromKeyboard = new InlineKeyboard()
  .text('–ü–ª–∞—Å—Ç–∏–∫', 'button-plastic-myrom')
  .text('–ë–∞—Ç–∞—Ä–µ–π–∫–∏', 'button-battery-myrom')
  .text('–°—Ç–µ–∫–ª–æ', 'button-glass-myrom');

const backKeyboard = new InlineKeyboard().text('< –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back');

const mainMenuKeyboard = new Keyboard()
  .text('–í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥')
  .text('–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã')
  .text('–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
  .text('–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç')
  .resized();

const faqKeyboard = new InlineKeyboard()
  .text('–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–∞–≤–∞—Ç—å?', 'faq-what-to-recycle').row()
  .text('–ì–¥–µ –Ω–∞–π—Ç–∏ –ø—É–Ω–∫—Ç—ã —Å–±–æ—Ä–∞?', 'faq-locations').row()
  .text('–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º—É—Å–æ—Ä?', 'faq-preparation');

const settingsKeyboard = new InlineKeyboard()
  .text('–Ø–∑—ã–∫', 'settings-language')
  .text('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'settings-notifications')
  .text('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back-to-main-menu');

// –ö–æ–º–∞–Ω–¥—ã
bot.api.setMyCommands([{ command: 'start', description: 'Start bot' }]);

bot.command('start', async (ctx) => {
  const helloMessage = await ctx.reply(`üî• –≠–π, ${ctx.from.first_name}! üî•
–Ø —Ç–æ—Ç —Å–∞–º—ã–π –≠–∫–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –¥–∞—Å—Ç —Ç–µ–±–µ —à–∞–Ω—Å–∞ –Ω–∞ –±–µ–∑–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å. üåç‚ôªÔ∏è
–¢–∞–∫ —á—Ç–æ —Ö–≤–∞—Ç–∏—Ç –±–µ–∑–¥–µ–ª—å–Ω–∏—á–∞—Ç—å, –≤—ã–±–µ—Ä–∏, –Ω–∞–∫–æ–Ω–µ—Ü, –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é –∏ –∑–∞–π–º–∏—Å—å –¥–µ–ª–æ–º. üóëÔ∏èüõ†Ô∏è
–°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –Ω–∞ –ø–æ—Ç–æ–º? –í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å! ‚è∞‚ö°
–°–æ–±–µ—Ä—ë–º –º—É—Å–æ—Ä –∏ —Å–¥–µ–ª–∞–µ–º –º–∏—Ä —á–∏—â–µ, –∏–ª–∏ —Ç–∞–∫ –∏ –±—É–¥–µ–º —Å–∏–¥–µ—Ç—å –Ω–∞ –¥–∏–≤–∞–Ω–µ? üõãÔ∏è‚û°Ô∏èüåü`,
    {
      reply_markup: mainMenuKeyboard,
      parse_mode: "HTML"
    });

  setTimeout(async () => {
    await ctx.api.deleteMessage(ctx.chat.id, helloMessage.message_id);
  }, 60000);
});


bot.hears('< –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', async (ctx) => {
	await ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', {
			reply_markup: mainMenuKeyboard,
	});
});


bot.on('message:text', async (ctx) => {
  const text = ctx.message.text;

  if (text === '–í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥') {
    
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:', {
      reply_markup: selectCityKeyboard,
      parse_mode: "HTML"
    });

  } else if (['–í—ã–∫—Å–∞'].includes(text)) {
    const VyksaMessage = await ctx.reply('–í—ã –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥ –í—ã–∫—Å–∞...', {
      reply_markup: { remove_keyboard: true },
    });
		await ctx.react('ü¶Ñ');
    await ctx.reply(randomReply, {
      reply_markup: VyksaKeyboard,
    });
    setTimeout(async () => {
      await ctx.api.deleteMessage(ctx.chat.id, VyksaMessage.message_id);
    }, 1500);

  } else if (['–ù–∞–≤–∞—à–∏–Ω–æ'].includes(text)) {
    const NavaShinoMessage = await ctx.reply('–í—ã –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥ –ù–∞–≤–∞—à–∏–Ω–æ...', {
      reply_markup: { remove_keyboard: true },
    });
    await ctx.reply("–ú—É—Å–æ—Ä –µ—Å—Ç—å, –Ω–æ –≤—ã –¥–µ—Ä–∂–∏—Ç–µ—Å—å:—Å", {
      reply_markup: NavaShinoKeyboard,
			parse_mode: "HTML"
    });
    setTimeout(async () => {
      await ctx.api.deleteMessage(ctx.chat.id, NavaShinoMessage.message_id);
    }, 1500);
  } else if (['–ú—É—Ä–æ–º'].includes(text)) {
    const MyromMessage = await ctx.reply('–í—ã –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥ –ú—É—Ä–æ–º...', {
      reply_markup: { remove_keyboard: true },
    });
    await ctx.reply(randomReply, {
      reply_markup: MyromKeyboard,
    });
    setTimeout(async () => {
      await ctx.api.deleteMessage(ctx.chat.id, MyromMessage.message_id);
    }, 1500);
  } else if (text === '–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã') {
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:', {
      reply_markup: faqKeyboard,
    });
  } else if (text === '–ù–∞—Å—Ç—Ä–æ–π–∫–∏') {
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É:', {
      reply_markup: settingsKeyboard,
    });
  } else if (text === '–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç') {
    await ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É! –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.', {
      reply_markup: new InlineKeyboard().text('–°–¥–µ–ª–∞—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ', 'donate')
    });
  }
});


// –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É –ü–ª–∞—Å—Ç–∏–∫ –≤ –í—ã–∫—Å–µ
bot.callbackQuery('button-plastic-vyksa', async (ctx) => {
  await ctx.answerCallbackQuery({
    text: '–†–µ—à–∏–ª–∏ —Å–¥–∞–≤–∞—Ç—å –ø–ª–∞—Å—Ç–∏–∫?',
    reply_markup: keyboardOptions,

  });
  const plasticMessage = await ctx.callbackQuery.message.editText(`ü§î –†–µ—à–∏–ª–∏ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –ø–ª–∞—Å—Ç–∏–∫–∞? –û—Ç–ª–∏—á–Ω–æ!
üèÜ –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–π –≤—ã–±–æ—Ä, –≤–æ–∏–Ω —ç–∫–æ–ª–æ–≥–∏–∏! ü•á

üëâ –ü–ª–∞—Å—Ç–∏–∫ –Ω–µ—Å–∏ —Å—é–¥–∞ ‚Äî –ø—Ä—è–º–æ –≤ —Ü–µ–Ω—Ç—Ä! üí™

üìù –í–æ—Ç —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1Ô∏è‚É£ üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø–ª–∞—Å—Ç–∏–∫:
   - –¢—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–º–æ–π—Ç–µ –∏ –≤—ã—Å—É—à–∏—Ç–µ.
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ –Ω—ë–º –Ω–µ—Ç –æ—Å—Ç–∞—Ç–∫–æ–≤ –ø–∏—â–∏ –∏–ª–∏ –Ω–∞–ø–∏—Ç–∫–æ–≤.
   - –°–Ω–∏–º–∏—Ç–µ —ç—Ç–∏–∫–µ—Ç–∫–∏, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.

2Ô∏è‚É£ üìû –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã:
   - ‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (xxx) xxx-xx-xx

3Ô∏è‚É£ üìç –ù–∞–π–¥–∏—Ç–µ –Ω–∞—Å –∑–¥–µ—Å—å:
   - üè¢ —É–ª –ü—É—à–∫–∏–Ω–∞, –¥. –ö–æ–ª–æ—Ç—É—à–∫–∏–Ω–∞

üó∫Ô∏è –î–∞–≤–∞–π—Ç–µ –¥–µ–ª–∞—Ç—å –º–∏—Ä —á–∏—â–µ –≤–º–µ—Å—Ç–µ! üåç`,{
		parse_mode: "HTML"
	});
  const locationMessage = await ctx.replyWithLocation(55.321282, 42.174339,  {
    reply_markup: backKeyboard,
  });
  sessions.set(ctx.chat.id, { locationMessageId: locationMessage.message_id, plasticMessageId: plasticMessage.message_id });
});

bot.callbackQuery('button-glass-vyksa', async (ctx) => {
  await ctx.answerCallbackQuery({
    text: '–†–µ—à–∏–ª–∏ —Å–¥–∞–≤–∞—Ç—å –°—Ç–µ–∫–ª–æ?',
  });
  const plasticMessage = await ctx.callbackQuery.message.editText(`üî• –†–µ—à–∏–ª–∏ —Å–¥–∞–≤–∞—Ç—å —Å—Ç–µ–∫–ª–æ? üî•

–ê —Ç—ã, –∫–∞–∂–µ—Ç—Å—è, —Å–µ—Ä—å—ë–∑–Ω–æ –ø–æ–¥–Ω–∏–º–∞–µ—à—å —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–ª–∞–Ω–∫—É! –°—Ç–µ–∫–ª–æ - —ç—Ç–æ –≤–∞—à —à–∞–Ω—Å –Ω–µ–º–Ω–æ–≥–æ –ø–æ—á–∏—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –º–∏—Ä –æ—Ç –ª–∏—à–Ω–µ–≥–æ —Ö–ª–∞–º–∞. –î–∞–≤–∞–π —É—Å—Ç—Ä–æ–∏–º –∑–¥–µ—Å—å –ø—Ä–∏–ª–∏—á–Ω—ã–π "—Å—Ç–µ–∫–ª—è–Ω–Ω—ã–π –±—É–º"! üí™

1Ô∏è‚É£ üí° –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ç–µ–∫–ª–∞ –∫ —Å–¥–∞—á–µ:

		-–û—á–∏—Å—Ç–∏ –±—É—Ç—ã–ª–∫–∏ –∏ –±–∞–Ω–∫–∏ –æ—Ç –≤—Å–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ.
		-–û—Ç–∫—Ä—É—Ç–∏ –∫—Ä—ã—à–∫–∏ - –æ–Ω–∏ –Ω–∞–º –Ω–µ –Ω—É–∂–Ω—ã.

2Ô∏è‚É£üìû –¶–∏—Ñ—Ä—ã –∑–Ω–∞–µ—à—å?
		- ‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (xxx) xxx-xx-xx

3Ô∏è‚É£üìç –†–∞–π–æ–Ω—á–∏–∫ —Ç–∞–∫–æ–π-—Ç–æ?
		- üè¢ —É–ª –ü—É—à–∫–∏–Ω–∞, –¥. –ö–æ–ª–æ—Ç—É—à–∫–∏–Ω–∞

–ù–µ—Å–∏ —Å—Ç–µ–∫–ª–æ —Å—é–¥–∞, –∫ –Ω–∞–º. –£–≤–µ—Ä–µ–Ω—ã, —Ç—ã —Å–¥–µ–ª–∞–µ—à—å —ç—Ç–æ —Å—Ç–∏–ª—å–Ω–æ –∏ —Å –ø–æ–ª—å–∑–æ–π –¥–ª—è –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç—ã!

`, {
		parse_mode: "HTML"
	});
  const locationMessage = await ctx.replyWithLocation(42.174339, 55.321282, {
    reply_markup: backKeyboard,
  });
  sessions.set(ctx.chat.id, { locationMessageId: locationMessage.message_id, plasticMessageId: plasticMessage.message_id });
});


bot.callbackQuery('button-battery-vyksa', async (ctx) => {
  await ctx.answerCallbackQuery({
    text: '–†–µ—à–∏–ª–∏ —Å–¥–∞–≤–∞—Ç—å –±–∞—Ç–∞—Ä–µ–π–∫–∏?',
  });
  const plasticMessage = await ctx.callbackQuery.message.editText(`üî• –ì–æ—Ç–æ–≤ —É—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞—Ç–∞—Ä–µ–π–∫–∏? –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä, –±–æ–µ—Ü –∑–∞ —á–∏—Å—Ç–æ—Ç—É –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã! üí•

üëâ –ë–∞—Ç–∞—Ä–µ–π–∫–∏ ‚Äî –≤–∞–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç, –Ω–µ –∑–∞–±—ã–≤–∞–π —Å–¥–∞–≤–∞—Ç—å –∏—Ö —Å—é–¥–∞, –∫—É–¥–∞ –ø—Ä—è–º–æ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞—à–∞ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∞—Ä–º–∏—è! üí™

üìù –ö–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å:
1Ô∏è‚É£ üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤—å –±–∞—Ç–∞—Ä–µ–π–∫–∏:

–£–±–µ–¥–∏—Å—å, —á—Ç–æ –æ–Ω–∏ –≤—ã–Ω—É—Ç—ã –∏–∑ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ –Ω–µ –∏—Å–ø–æ—Ä—á–µ–Ω—ã.
–ù–µ –ø—ã—Ç–∞–π—Å—è —Ä–∞–∑–±–∏—Ä–∞—Ç—å –±–∞—Ç–∞—Ä–µ–π–∫–∏ –Ω–∞ –¥–µ—Ç–∞–ª–∏.
–ò—Å–ø–æ–ª—å–∑—É–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Å–±–æ—Ä–∞.
2Ô∏è‚É£ üìû –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? –ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –∑–≤–æ–Ω–∏—Ç—å:

‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: +7 (123) 456-78-90
3Ô∏è‚É£ üìç –ù–∞—à –∞–¥—Ä–µ—Å:

üè¢ –ú–æ—Å–∫–≤–∞, —É–ª. –ó–µ–ª–µ–Ω–∞—è, –¥. 123
üó∫Ô∏è –í–º–µ—Å—Ç–µ –º—ã –¥–µ–ª–∞–µ–º –º–∏—Ä —á–∏—â–µ –∏ —è—Ä—á–µ! üåçüåü
`, {
		parse_mode: "HTML"
	});
  const locationMessage = await ctx.replyWithLocation(55.753700, 37.621250, {
    reply_markup: backKeyboard,
  });
  sessions.set(ctx.chat.id, { locationMessageId: locationMessage.message_id, plasticMessageId: plasticMessage.message_id });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
bot.callbackQuery('back', async (ctx) => {
  await ctx.answerCallbackQuery();
  const session = sessions.get(ctx.chat.id);
  if (session && session.locationMessageId && session.plasticMessageId) {
    await ctx.api.deleteMessage(ctx.chat.id, session.locationMessageId);
    await ctx.api.deleteMessage(ctx.chat.id, session.plasticMessageId);
  }
  await ctx.reply(randomReply, {
    reply_markup: VyksaKeyboard,
  });
});

bot.callbackQuery('backSitySelect', async (ctx) => {
	await ctx.answerCallbackQuery({
		reply_markup: { remove_keyboard: true },
	});
  await ctx.answerCallbackQuery({
		text: '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥',
	});  
	await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:', {
		reply_markup: selectCityKeyboard,
	});
});

const backFAQKeyboard = new InlineKeyboard().text('< –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'backFAQ');

bot.callbackQuery('backFAQ', async (ctx) => {
	await ctx.answerCallbackQuery();
	await ctx.callbackQuery.message.editText('–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', {
		reply_markup: faqKeyboard,}); 
	});

bot.callbackQuery('faq-what-to-recycle', async (ctx) => {
  await ctx.answerCallbackQuery({
    text: '–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–∞–≤–∞—Ç—å?',
		reply_markup: { remove_keyboard: true }
  });

  await ctx.callbackQuery.message.editText(`üü° <b>–ü–ª–∞—Å—Ç–∏–∫</b>:
- –ü–≠–¢-–ø–ª–∞—Å—Ç–∏–∫ (–ü–≠–¢–ï): –ë—É—Ç—ã–ª–∫–∏ –æ—Ç –≤–æ–¥—ã, —Å–æ–∫–æ–≤, –±–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤. –û–±—ã—á–Ω–æ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–æ —Å–∏–º–≤–æ–ª–æ–º "1" –Ω–∞ –¥–Ω–µ.

- –ü–æ–ª–∏—ç—Ç–∏–ª–µ–Ω –≤—ã—Å–æ–∫–æ–π –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ (–ü–≠–í–ü, –ü–í–î): –ü–∞–∫–µ—Ç—ã, –ø–ª–µ–Ω–∫–∞, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –º–æ–ª–æ—á–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –ú–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ "2".

- –ü–æ–ª–∏–ø—Ä–æ–ø–∏–ª–µ–Ω (–ü–ü): –ë—É—Ç—ã–ª–∫–∏ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –º–∞—Å–ª–∞, –º–µ–¥–∞, –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ "5".

–ü–æ–ª–∏—ç—Ç–∏–ª–µ–Ω —Ç–µ—Ä–µ—Ñ—Ç–∞–ª–∞—Ç (–ü–≠–¢–ì): –£–ø–∞–∫–æ–≤–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –∫–æ—Å–º–µ—Ç–∏–∫–∏ –∏ –±—ã—Ç–æ–≤–æ–π —Ö–∏–º–∏–∏, –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ "7".

üü¢ <b>–°—Ç–µ–∫–ª–æ</b>:

- –ë–µ–∑ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏: –°—Ç–µ–∫–ª—è–Ω–Ω—ã–µ –±—É—Ç—ã–ª–∫–∏, –±–∞–Ω–∫–∏, —Å—Ç–µ–∫–ª–∞ –∏–∑ –æ–∫–æ–Ω. –û—á–∏—Å—Ç–∏—Ç–µ –æ—Ç –ø—Ä–æ—á–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ω–∞–ø–∏—Ç–∫–æ–≤.

üîã <b>–ë–∞—Ç–∞—Ä–µ–π–∫–∏</b>:

- –õ–∏—Ç–∏–π-–∏–æ–Ω–Ω—ã–µ (Li-Ion): –ú–æ–±–∏–ª—å–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã, –Ω–æ—É—Ç–±—É–∫–∏, –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã –æ—Ç —ç–ª–µ–∫—Ç—Ä–æ–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤. –°–¥–∞–≤–∞–π—Ç–µ –≤ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã.

- –ù–∏–∫–µ–ª—å-–∫–∞–¥–º–∏–µ–≤—ã–µ (Ni-Cd): –°—Ç–∞—Ä—ã–µ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã, –±–∞—Ç–∞—Ä–µ–π–∫–∏ –æ—Ç –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤. –°–¥–∞–≤–∞–π—Ç–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏.

- –ü–æ–≤–µ—Ä–±–∞–Ω–∫–∏: –ò—Ö –º–æ–∂–Ω–æ —Å–¥–∞—Ç—å –∫–∞–∫ —Å—Ç–∞—Ä—ã–µ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–º–µ–Ω—ã –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞, –∏ –µ—Å–ª–∏ –Ω–µ—Ç, —É—Ç–∏–ª–∏–∑–∏—Ä—É–π—Ç–µ.

<b>–≠—Ç–æ –ª–∏—à—å —á–∞—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–∞–≤–∞—Ç—å. –ì–ª–∞–≤–Ω–æ–µ, –ø–æ–º–Ω–∏—Ç–µ –æ –∑–∞–±–æ—Ç–µ –æ –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç–µ –∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤!</b>`, {
		parse_mode: "HTML",
		reply_markup: backFAQKeyboard,
	});
});

bot.callbackQuery('faq-locations', async (ctx) => {
  await ctx.answerCallbackQuery({
    text: '–ì–¥–µ –Ω–∞–π—Ç–∏ –ø—É–Ω–∫—Ç—ã —Å–±–æ—Ä–∞?',
		reply_markup: { remove_keyboard: true }
  });
  await ctx.callbackQuery.message.editText('–ü—É–Ω–∫—Ç—ã —Å–±–æ—Ä–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —á–∞—Å—Ç—è—Ö –≥–æ—Ä–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.',{
		parse_mode: "HTML",
		reply_markup: backFAQKeyboard,
	});
});

bot.callbackQuery('faq-preparation', async (ctx) => {
  await ctx.answerCallbackQuery({
    text: '–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º—É—Å–æ—Ä?',
		reply_markup: { remove_keyboard: true }
  });
  await ctx.callbackQuery.message.editText(`üì¶ –ü–ª–∞—Å—Ç–∏–∫:

–ü–æ–º–æ–π—Ç–µ –ø–ª–∞—Å—Ç–∏–∫, –∫–∞–∫ –±—É–¥—Ç–æ –∑–∞–≤—Ç—Ä–∞ –æ—Ç —ç—Ç–æ–≥–æ –∑–∞–≤–∏—Å–∏—Ç –º–∏—Ä. –ù–∏–∫–∞–∫–∏—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤ –µ–¥—ã –∏–ª–∏ –ø–∏—Ç—å—è, —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç–æ—Ç–∞!
–°–Ω–∏–º–∏—Ç–µ —ç—Ç–∏–∫–µ—Ç–∫–∏ –∏ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã—Å—É—à–∏—Ç—å. –ù–∞—à–∞ –ø—Ä–∏—Ä–æ–¥–∞ –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç –ª—É—á—à–µ–≥–æ, —á–µ–º –ø–ª–∞—Å—Ç–∏–∫ —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏.
üç∂ –°—Ç–µ–∫–ª–æ:

–î–∞–≤–∞–π—Ç–µ –±—É–¥–µ–º –∑–¥–µ—Å—å –ø–æ-–º—É–∂—Å–∫–∏: —É–¥–∞–ª—è–π—Ç–µ –≤—Å–µ –ª–∏—à–Ω–µ–µ —Å –±—É—Ç—ã–ª–æ–∫ –∏ –±–∞–Ω–æ–∫. –û—á–∏—Å—Ç–∏—Ç–µ –∏—Ö –æ—Ç –≤—Å–µ–≥–æ, —á—Ç–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–µ–∫–ª–æ–º!
–ö—Ä—ã—à–∫–∏? –î–∞ –ª—É—á—à–µ –±–µ–∑ –Ω–∏—Ö! –û–Ω–∏ –Ω–∞–º –Ω–µ –Ω—É–∂–Ω—ã –≤ —ç—Ç–æ–π –∏–≥—Ä–µ —á–∏—Å—Ç–æ—Ç—ã.
üîã –ë–∞—Ç–∞—Ä–µ–π–∫–∏:

–ë–∞—Ç–∞—Ä–µ–π–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ü–µ–ª—ã–º–∏ –∏ —á–∏—Å—Ç—ã–º–∏, –∫–∞–∫ –≥–ª–∞–∑–∞ –æ—Ä–ª–∞. –ë–µ–∑ –ø—Ä–æ–ª–∏–≤–æ–≤, –±–µ–∑ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π!
–≠—Ç–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –º—É—Å–æ—Ä—É, –≤–µ–¥—å –º—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç–µ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –æ—Ç–¥–∞—á–µ–π –∏ —Å–º–µ–ª–æ—Å—Ç—å—é!`,{
		parse_mode: "HTML",
		reply_markup: backFAQKeyboard,
	}
		
	);
});

bot.callbackQuery('settings-language', async (ctx) => {
  await ctx.answerCallbackQuery({
    text: '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫',
  });
  await ctx.callbackQuery.message.editText('–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–∫–∞ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º.');
});

bot.callbackQuery('settings-notifications', async (ctx) => {
  await ctx.answerCallbackQuery({
    text: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
  });
  await ctx.callbackQuery.message.editText('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.');
});





// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–Ω–∞—Ç–æ–≤
bot.callbackQuery('donate', async (ctx) => {
  await ctx.answerCallbackQuery();
  await ctx.replyWithInvoice({
    title: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞',
    description: '–°–¥–µ–ª–∞–π—Ç–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.',
    payload: 'donate-payload',
    provider_token: process.env.PAYMENT_PROVIDER_TOKEN, // –¢–æ–∫–µ–Ω –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
    currency: 'RUB',
    prices: [{ label: '–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ', amount: 10000 }], // –°—É–º–º–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö (10000 –∫–æ–ø–µ–µ–∫ = 100 —Ä—É–±–ª–µ–π)
    start_parameter: 'donate',
    photo_url: 'https://example.com/donation-image.jpg', // URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –¥–æ–Ω–∞—Ç–æ–≤ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
  });
});

bot.catch((err) => {
  const ctx = err.ctx;
  console.error(`Error while handling update ${ctx.update.update_id}:`);
  const e = err.error;
  if (e instanceof GrammyError) {
    console.error('Error in request:', e.desc);
  } else if (e instanceof HttpError) {
    console.error('Could not contact Telegram:', e);
  } else {
    console.error('Unknown error:', e);
  }
});

bot.start();
